name: Build project

on: [push, pull_request]

jobs:
  buildSimulator:
    name: Build application
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install blender
        run: sudo snap install blender --classic
      - name: Checkout github repo (+ download lfs dependencies)
        uses: actions/checkout@v3
      - name: Install Git LFS
        run: git lfs install
      - name: Pull the lfs objects
        run: git lfs pull
      # - name: Download Linux Build Support Module for Unity
      #   run: wget https://download.unity3d.com/download_unity/3129e69bc0c7/LinuxEditorTargetInstaller/UnitySetup-Linux-IL2CPP-Support-for-Editor-2021.3.18f1.tar.xz?_ga=2.90739994.1217471959.1676996261-959760623.1676908686;
      #         ls;
      #         tar -xf UnitySetup-Linux-IL2CPP-Support-for-Editor-2021.3.18f1.tar.xz?_ga=2.90739994.1217471959.1676996261-959760623.1676908686;
      #         sudo rm UnitySetup-Linux-IL2CPP-Support-for-Editor-2021.3.18f1.tar.xz?_ga=2.90739994.1217471959.1676996261-959760623.1676908686;
      #         mkdir Unity;
      #         mkdir Unity/Hub;
      #         mkdir Unity/Hub/Editor;
      #         mkdir Unity/Hub/Editor/2021.3.18f1;
      #         sudo mv Editor Unity/Hub/Editor/2021.3.18f1;      
      - name: Cache library files from previous builds
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-StandaloneLinux
          restore-keys: Library-
      - name: Generate release tag
        id: generate_release_tag
        uses: amitsingh-007/next-release-tag@v1.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: 'Autobuild'
      - name: Build the project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneLinux64
          unityVersion: 2021.3.18f1  # -m linux
      - name: Change name of built directory and files to AscendSimulator
        run: mkdir ${{ env.release_tag }}; 
              sudo mv ./build/StandaloneLinux64/* ${{ env.release_tag }};
              sudo mv ${{ env.release_tag }}/StandaloneLinux64_Data/ ${{ env.release_tag }}/AscendSimulator_Data; 
              sudo mv ${{ env.release_tag }}/StandaloneLinux64 ${{ env.release_tag }}/AscendSimulator; 
              sudo rm ${{ env.release_tag }}/StandaloneLinux64_BurstDebugInformation_DoNotShip/ -r
      - name: Upload built artefacts
        uses: actions/upload-artifact@v2
        with:
          name: Build-StandaloneLinux64
          path: ${{ env.release_tag }}
      - name: Zip artifact for deployment
        run: zip autobuild${{ env.release_tag }}.zip ./${{ env.release_tag }}/* -r
      - name: Create latest release
        uses: ncipollo/release-action@v1
        with:
          tag: "${{ env.release_tag }}"
          artifacts: "autobuild${{ env.release_tag }}.zip"